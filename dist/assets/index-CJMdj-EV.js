import{M as w}from"./MipmapFilter-nkAaR1eK.js";import{v as P,G as D,j as _,V as o}from"./uwal-BNRo3Xsn.js";import{v as z,a as n}from"./wgpu-matrix.module-3qzuEYdi.js";/**
 * @module Loading Canvas
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This lesson is reproduced from WebGPU Loading Images into Textures
 * {@link https://webgpufundamentals.org/webgpu/lessons/webgpu-importing-textures.html#loading-canvas}&nbsp;
 * and developed by using a version listed below. Please note that this code
 * may be simplified in future thanks to more recent library APIs.
 * @version 0.0.5
 * @license MIT
 */(async function(h){let r;try{r=new(await P.RenderPipeline(h,"Loading Canvas"))}catch(e){alert(e)}const c=256,u=c/2,F=0,d=[],p=1,m=2e3,x=[0,1,0],y=[0,0,0],T=Math.PI*60/180,B=[0,0,2],R=z.set(1.2,.7),f=n.perspective(T,r.AspectRatio,p,m),v=n.inverse(n.lookAt(B,y,x)),A=n.multiply(f,v),a=document.createElement("canvas").getContext("2d");a.canvas.width=a.canvas.height=c;const E=new(await P.LegacyTexture());E.SetRenderer(r);const S=L(a.canvas,!0);r.CreatePipeline({module:r.CreateShaderModule([D.Quad,w])});const g=r.CreateColorAttachment();g.clearValue=new _(5000268).rgba,r.CreatePassDescriptor(g);for(let e=0;e<8;e++){const t=E.CreateSampler({addressModeU:o.ADDRESS.REPEAT,addressModeV:o.ADDRESS.REPEAT,magFilter:e&1?o.FILTER.LINEAR:o.FILTER.NEAREST,minFilter:e&2?o.FILTER.LINEAR:o.FILTER.NEAREST,mipmapFilter:e&4?o.FILTER.LINEAR:o.FILTER.NEAREST}),s=16*Float32Array.BYTES_PER_ELEMENT,i=r.CreateBuffer({usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,size:s}),l=new Float32Array(s/Float32Array.BYTES_PER_ELEMENT),I=l.subarray(F,16);r.AddBindGroups(r.CreateBindGroup(r.CreateBindGroupEntries([t,S.createView(),{buffer:i}]))),d.push({matrixBuffer:i,matrixValues:l,matrix:I})}const M=(e,t,s)=>`hsl(${e*360|0}, ${t*100}%, ${s*100|0}%)`;function L(e,t=!1){return E.CopyImageToTexture(e,{create:{usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST,format:"rgba8unorm",mipmaps:t}})}function N(e){a.clearRect(0,0,c,c),a.save(),a.translate(u,u);const t=20;for(let s=0;s<t;s++)a.fillStyle=M(s/t*.2+e*.1,1,s%2*.5),a.fillRect(-u,-u,c,c),a.rotate(e*.5),a.scale(.85,.85),a.translate(c/16,0);a.restore()}function C(e){N(e*1e-4),requestAnimationFrame(C),E.CopyImageToTexture(a.canvas,{texture:S}),d.forEach(({matrix:t,matrixBuffer:s,matrixValues:i},l)=>{const U=l%4-1.5,b=+(l<4)*2-1,G=[U*R[0],b*R[1],-50*.5];n.translate(A,G,t),n.rotateX(t,Math.PI*.5,t),n.scale(t,[1,100,1],t),n.translate(t,[-.5,-.5,0],t),r.WriteBuffer(s,i),r.SetActiveBindGroups(l),r.Render(6,!1)}),r.Submit()}new ResizeObserver(e=>{for(const t of e){const{inlineSize:s,blockSize:i}=t.contentBoxSize[0];r.SetCanvasSize(s,i)}n.perspective(T,r.AspectRatio,p,m,f),n.multiply(f,v,A),requestAnimationFrame(C)}).observe(document.body)})(document.getElementById("lesson"));
