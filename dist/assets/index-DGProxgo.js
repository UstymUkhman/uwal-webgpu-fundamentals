import{v as F,V as B,j as E,F as t}from"./uwal-C6J7qtYI.js";import{g as M}from"./mipmaps-kMQ0t0FP.js";var b="struct Transform{scale: vec2f,offset: vec2f};struct VertexOutput{@builtin(position)position: vec4f,@location(0)textureCoord: vec2f};@group(0)@binding(0)var Sampler: sampler;@group(0)@binding(1)var Texture: texture_2d<f32>;@group(0)@binding(2)var<uniform>transform: Transform;@vertex fn vertex(@builtin(vertex_index)index: u32)->VertexOutput {var output: VertexOutput;var position=GetQuadCoord(index);position=(position+1)*0.5;output.position=vec4f(position*transform.scale+transform.offset,0.0,1.0);output.textureCoord=position;return output;}@fragment fn fragment(@location(0)textureCoord: vec2f)->@location(0)vec4f {return textureSample(Texture,Sampler,textureCoord);}";/**
 * @module Textures
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This lesson is reproduced from WebGPU Textures
 * {@link https://webgpufundamentals.org/webgpu/lessons/webgpu-textures.html}&nbsp;
 * and developed by using a version listed below. Please note that this code
 * may be simplified in future thanks to more recent library APIs.
 * @version 0.0.5
 * @license MIT
 */(async function(i){let o;try{o=new(await F.RenderPipeline(i,"Texture"))}catch(r){alert(r)}o.CreatePipeline({module:o.CreateShaderModule([B.Quad,b])});const m=o.CreateColorAttachment();m.clearValue=new E(5000268).rgba,o.CreatePassDescriptor(m);const D=5,L=0,P=2,n={addressModeU:t.ADDRESS.REPEAT,addressModeV:t.ADDRESS.REPEAT,magFilter:t.FILTER.LINEAR,minFilter:t.FILTER.LINEAR,scale:1},p=[t.ADDRESS.REPEAT,t.ADDRESS.CLAMP],A=[t.FILTER.NEAREST,t.FILTER.LINEAR],d=new GUI;d.add(n,"addressModeU",p),d.add(n,"addressModeV",p),d.add(n,"magFilter",A),d.add(n,"minFilter",A),d.add(n,"scale",.5,6);const e=new E(16711680).RGBA,a=new E(16776960).RGBA,C=new E(255).RGBA,I=new Uint8Array([e,e,e,e,e,e,a,e,e,e,e,a,e,e,e,e,a,a,e,e,e,a,e,e,e,e,a,a,a,e,C,e,e,e,e].flat()),f=M(I,D),c=new(await F.LegacyTexture()),T=c.CreateTexture({usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST,size:[f[0].width,f[0].height],mipLevelCount:f.length,format:"rgba8unorm"});f.forEach(({data:r,width:s,height:u},R)=>c.WriteTexture(r,{bytesPerRow:s*4,texture:T,mipLevel:R,width:s,height:u}));const S=2*Float32Array.BYTES_PER_ELEMENT+2*Float32Array.BYTES_PER_ELEMENT,g=o.CreateBuffer({size:S,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),l=new Float32Array(S/Float32Array.BYTES_PER_ELEMENT);for(let r=0;r<16;r++){const s=c.CreateSampler({addressModeU:r&1?t.ADDRESS.REPEAT:t.ADDRESS.CLAMP,addressModeV:r&2?t.ADDRESS.REPEAT:t.ADDRESS.CLAMP,magFilter:r&4?t.FILTER.LINEAR:t.FILTER.NEAREST,minFilter:r&8?t.FILTER.LINEAR:t.FILTER.NEAREST});o.AddBindGroups(o.CreateBindGroup(o.CreateBindGroupEntries([s,T.createView(),{buffer:g}])))}function v(r){const s=4/i.width*n.scale,u=4/i.height*n.scale;l.set([s,u],L),l.set([Math.sin(r*.25)*.8,-.8],P),o.WriteBuffer(g,l)}function x(r){const s=+(n.addressModeU===t.ADDRESS.REPEAT)*1+ +(n.addressModeV===t.ADDRESS.REPEAT)*2+ +(n.magFilter===t.FILTER.LINEAR)*4+ +(n.minFilter===t.FILTER.LINEAR)*8;o.SetActiveBindGroups(s),v(r*.001),o.Render(6),requestAnimationFrame(x)}new ResizeObserver(r=>{for(const s of r){const{inlineSize:u,blockSize:R}=s.contentBoxSize[0];o.SetCanvasSize(u/64|0,R/64|0,!1)}requestAnimationFrame(x)}).observe(document.body),i.style.imageRendering="pixelated",i.style.imageRendering="crisp-edges"})(document.getElementById("lesson"));
